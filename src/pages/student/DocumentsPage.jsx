import React, { useState } from "react";
import "../../styles/student/DocumentPage.css";

const DocumentsPage = () => {
    const [isModalOpen, setIsModalOpen] = useState(false); // –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const [selectedType, setSelectedType] = useState(""); // –î–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    const [file, setFile] = useState(null); // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

    const documentTypes = [
        "–£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏",
        "–ó–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç",
        "–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –±–∏–ª–µ—Ç",
        "–°–ø—Ä–∞–≤–∫–∞ —Å –º–µ—Å—Ç–∞ —É—á–µ–±—ã",
    ];

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    const handleFileChange = (e) => {
        setFile(e.target.files[0]);
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    const handleUpload = () => {
        if (selectedType && file) {
            alert(`–î–æ–∫—É–º–µ–Ω—Ç "${selectedType}" –∑–∞–≥—Ä—É–∂–µ–Ω!`);
            setIsModalOpen(false); // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
            setSelectedType(""); // –°–±—Ä–æ—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
            setFile(null); // –°–±—Ä–æ—Å —Ñ–∞–π–ª–∞
        } else {
            alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª.");
        }
    };

    return (
        <div className="documents-container">
            <h1 className="documents-title">–ú–æ–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h1>
            <table className="documents-table">
                <thead>
                <tr>
                    <th>‚Ññ</th>
                    <th>–¢–∏–ø</th>
                    <th>–§–∞–π–ª</th>
                    <th>–ì–æ–¥–µ–Ω –¥–æ</th>
                    <th>–°—Ç–∞—Ç—É—Å</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>1</td>
                    <td>–£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏</td>
                    <td><a href="#">—É–¥–æ.pdf</a></td>
                    <td>24.06.2025</td>
                    <td className="accepted">–ü—Ä–∏–Ω—è—Ç</td>
                </tr>
                </tbody>
            </table>
            <button className="upload-button" onClick={() => setIsModalOpen(true)}>
                –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π
            </button>

            {isModalOpen && (
                <div className="modal-container">
                    <div className="modal">
                        <h2>–ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç</h2>
                        <select
                            className="document-select"
                            value={selectedType}
                            onChange={(e) => setSelectedType(e.target.value)}
                        >
                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞</option>
                            {documentTypes.map((type, index) => (
                                <option key={index} value={type}>{type}</option>
                            ))}
                        </select>
                        <label className="file-upload">
                            <input type="file" onChange={handleFileChange} />
                            üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª
                        </label>
                        <div className="modal-buttons">
                            <button className="upload-btn" onClick={handleUpload}>
                                –ó–∞–≥—Ä—É–∑–∏—Ç—å
                            </button>
                            <button
                                className="modal-close"
                                onClick={() => setIsModalOpen(false)}
                            >
                                –û—Ç–º–µ–Ω–∏—Ç—å
                            </button>
                        </div>
                    </div>
                </div>
            )}

        </div>
    );
};

export default DocumentsPage;
